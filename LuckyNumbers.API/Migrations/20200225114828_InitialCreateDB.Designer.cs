// <auto-generated />
using System;
using LuckyNumbers.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LuckyNumbers.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200225114828_InitialCreateDB")]
    partial class InitialCreateDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("LuckyNumbers.API.Entities.HistoryGameForLotto", b =>
                {
                    b.Property<int>("historyLottoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("amountGoalFives")
                        .HasColumnType("INTEGER");

                    b.Property<int>("amountGoalFours")
                        .HasColumnType("INTEGER");

                    b.Property<int>("amountGoalSixes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("amountGoalThrees")
                        .HasColumnType("INTEGER");

                    b.Property<int>("betsSended")
                        .HasColumnType("INTEGER");

                    b.Property<string>("dateGame")
                        .HasColumnType("TEXT");

                    b.Property<int>("experience")
                        .HasColumnType("INTEGER");

                    b.Property<int>("result")
                        .HasColumnType("INTEGER");

                    b.Property<int>("userId")
                        .HasColumnType("INTEGER");

                    b.HasKey("historyLottoId");

                    b.HasIndex("userId");

                    b.ToTable("lottoHistoryGames");
                });

            modelBuilder.Entity("LuckyNumbers.API.Entities.LottoGame", b =>
                {
                    b.Property<int>("lottoGameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("amountOfFive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("amountOfFour")
                        .HasColumnType("INTEGER");

                    b.Property<int>("amountOfSix")
                        .HasColumnType("INTEGER");

                    b.Property<int>("amountOfThree")
                        .HasColumnType("INTEGER");

                    b.Property<int>("betsSended")
                        .HasColumnType("INTEGER");

                    b.Property<int>("maxBetsToSend")
                        .HasColumnType("INTEGER");

                    b.Property<int>("userId")
                        .HasColumnType("INTEGER");

                    b.HasKey("lottoGameId");

                    b.HasIndex("userId")
                        .IsUnique();

                    b.ToTable("lottoGames");
                });

            modelBuilder.Entity("LuckyNumbers.API.Entities.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("created")
                        .HasColumnType("TEXT");

                    b.Property<string>("email")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("lastLogin")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("passwordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("passwordSalt")
                        .HasColumnType("BLOB");

                    b.Property<int>("saldo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("username")
                        .HasColumnType("TEXT");

                    b.HasKey("userId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("LuckyNumbers.API.Entities.UserExperience", b =>
                {
                    b.Property<int>("userExperienceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("experience")
                        .HasColumnType("INTEGER");

                    b.Property<int>("level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("userId")
                        .HasColumnType("INTEGER");

                    b.HasKey("userExperienceId");

                    b.HasIndex("userId")
                        .IsUnique();

                    b.ToTable("userExperiences");
                });

            modelBuilder.Entity("LuckyNumbers.API.Entities.UserLottoBets", b =>
                {
                    b.Property<int>("lottoBetsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("number1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("number2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("number3")
                        .HasColumnType("INTEGER");

                    b.Property<int>("number4")
                        .HasColumnType("INTEGER");

                    b.Property<int>("number5")
                        .HasColumnType("INTEGER");

                    b.Property<int>("number6")
                        .HasColumnType("INTEGER");

                    b.Property<int>("userId")
                        .HasColumnType("INTEGER");

                    b.HasKey("lottoBetsId");

                    b.HasIndex("userId");

                    b.ToTable("userLottoBets");
                });

            modelBuilder.Entity("LuckyNumbers.API.Entities.HistoryGameForLotto", b =>
                {
                    b.HasOne("LuckyNumbers.API.Entities.User", "user")
                        .WithMany("lottoHistoryGames")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LuckyNumbers.API.Entities.LottoGame", b =>
                {
                    b.HasOne("LuckyNumbers.API.Entities.User", "user")
                        .WithOne("lottoGame")
                        .HasForeignKey("LuckyNumbers.API.Entities.LottoGame", "userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LuckyNumbers.API.Entities.UserExperience", b =>
                {
                    b.HasOne("LuckyNumbers.API.Entities.User", "user")
                        .WithOne("userExperience")
                        .HasForeignKey("LuckyNumbers.API.Entities.UserExperience", "userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LuckyNumbers.API.Entities.UserLottoBets", b =>
                {
                    b.HasOne("LuckyNumbers.API.Entities.User", "user")
                        .WithMany("userlottoBets")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
